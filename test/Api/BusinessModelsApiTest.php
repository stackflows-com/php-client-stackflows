<?php
/**
 * BusinessModelsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Stackflows\Clients\Stackflows
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Stackflows REST API
 *
 * Pagination query params are as follows: page[size]=10&page[number]=1
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Stackflows\Clients\Stackflows\Test\Api;

use \Stackflows\Clients\Stackflows\Configuration;
use \Stackflows\Clients\Stackflows\ApiException;
use \Stackflows\Clients\Stackflows\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * BusinessModelsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Stackflows\Clients\Stackflows
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class BusinessModelsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for businessModelsCommentsList
     *
     * List Comments.
     *
     */
    public function testBusinessModelsCommentsList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for businessModelsCreate
     *
     * Create.
     *
     */
    public function testBusinessModelsCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for businessModelsDelete
     *
     * Delete.
     *
     */
    public function testBusinessModelsDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for businessModelsDeleteBulk
     *
     * Delete bulk.
     *
     */
    public function testBusinessModelsDeleteBulk()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for businessModelsList
     *
     * List.
     *
     */
    public function testBusinessModelsList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for businessModelsPostRevision
     *
     * Submit Related Diagram.
     *
     */
    public function testBusinessModelsPostRevision()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for businessModelsShow
     *
     * View.
     *
     */
    public function testBusinessModelsShow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for businessModelsShowRevision
     *
     * View Related Diagram.
     *
     */
    public function testBusinessModelsShowRevision()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for businessModelsShowRevisions
     *
     * List Disgrams.
     *
     */
    public function testBusinessModelsShowRevisions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for businessModelsTag
     *
     * Tag.
     *
     */
    public function testBusinessModelsTag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for businessModelsUpdate
     *
     * Update.
     *
     */
    public function testBusinessModelsUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
