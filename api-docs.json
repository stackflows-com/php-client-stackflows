{
    "openapi": "3.0.0",
    "info": {
        "title": "Stackflows Gateway API",
        "description": "Stackflows Gateway API",
        "contact": {
            "email": "you@your-company.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://virtserver.swaggerhub.com/Stackflows/Gateway/1.0.0",
            "description": "SwaggerHub API Auto Mocking"
        },
        {
            "url": "http://gateway.stackflows.com/",
            "description": "Stackflows Gateway Server"
        },
        {
            "url": "http://gateway.test/",
            "description": "Dev Gateway Server"
        }
    ],
    "paths": {
        "/api/processes/start": {
            "post": {
                "tags": [
                    "process"
                ],
                "summary": "Start the process",
                "description": "Start the process",
                "operationId": "startProcess",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartProcessRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Request successful."
                    }
                }
            }
        },
        "/api/processes": {
            "post": {
                "tags": [
                    "process"
                ],
                "summary": "Create a process",
                "description": "Create a process",
                "operationId": "createProcess",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProcessRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Process"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/service-tasks/pending": {
            "post": {
                "tags": [
                    "service task"
                ],
                "summary": "Fetch and Lock Service Tasks",
                "description": "Fetches and locks a specific number of external tasks for execution by a worker. ",
                "operationId": "getPending",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetPendingServiceTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ServiceTask"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/service-tasks/{id}/complete": {
            "post": {
                "tags": [
                    "service task"
                ],
                "summary": "Complete Service Task",
                "description": "Completes an service task by id and updates variables.",
                "operationId": "complete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompleteServiceTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Request successful."
                    }
                }
            }
        },
        "/api/signal": {
            "post": {
                "tags": [
                    "signal"
                ],
                "summary": "Throw a Signal",
                "description": "Throw a Signal",
                "operationId": "throwSignal",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ThrowSignalRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Request successful."
                    }
                }
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "user task"
                ],
                "summary": "Get a list of tasks",
                "description": "Queries for tasks that fulfill a given filter.",
                "operationId": "getList",
                "parameters": [
                    {
                        "name": "engine",
                        "in": "query",
                        "description": "Engine uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "createdAfter",
                        "in": "query",
                        "description": "Restrict to tasks that were created after the given date. Format ISO8601",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2017-07-21T17:32:28Z"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserTask"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks/{id}/complete": {
            "post": {
                "tags": [
                    "user task"
                ],
                "summary": "Complete User Task",
                "description": "Completes an user task by id and updates variables.",
                "operationId": "completeTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompleteUserTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Request successful."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CompleteServiceTaskRequest": {
                "properties": {
                    "engine": {
                        "description": "The engine model uuid.",
                        "type": "string"
                    },
                    "variables": {
                        "nullable": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variable"
                        }
                    }
                },
                "type": "object"
            },
            "CompleteUserTaskRequest": {
                "properties": {
                    "engine": {
                        "description": "The engine model uuid.",
                        "type": "string"
                    },
                    "variables": {
                        "nullable": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variable"
                        }
                    }
                },
                "type": "object"
            },
            "GetPendingServiceTaskRequest": {
                "properties": {
                    "engine": {
                        "description": "The engine model uuid.",
                        "type": "string"
                    },
                    "limit": {
                        "description": "The maximum number of tasks to return.",
                        "type": "integer"
                    },
                    "lockDuration": {
                        "description": "The duration to lock the tasks for in milliseconds.",
                        "type": "integer"
                    },
                    "topics": {
                        "description": "A list of topics for which tasks should be fetched.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "StartProcessRequest": {
                "properties": {
                    "instances": {
                        "nullable": false,
                        "type": "array",
                        "items": {
                            "$ref": "string"
                        }
                    },
                    "name": {
                        "description": "The process name.",
                        "type": "string"
                    },
                    "variables": {
                        "nullable": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variable"
                        }
                    }
                },
                "type": "object"
            },
            "StoreProcessRequest": {
                "properties": {
                    "name": {
                        "description": "The name for the deployment to be created.",
                        "type": "string"
                    },
                    "instances": {
                        "nullable": false,
                        "type": "array",
                        "items": {
                            "$ref": "string"
                        }
                    },
                    "notation": {
                        "nullable": false,
                        "description": "The binary data to create the deployment resource.",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "ThrowSignalRequest": {
                "properties": {
                    "engine": {
                        "description": "The engine model uuid.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the signal to deliver.",
                        "type": "string"
                    },
                    "variables": {
                        "nullable": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variable"
                        }
                    }
                },
                "type": "object"
            },
            "Process": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "definitionName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ServiceTask": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "processDefinitionKey": {
                        "type": "string"
                    },
                    "variables": {
                        "nullable": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variable"
                        }
                    }
                },
                "type": "object"
            },
            "UserTask": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "assignee": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "taskDefinitionKey": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "variables": {
                        "nullable": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variable"
                        }
                    }
                },
                "type": "object"
            },
            "Variable": {
                "properties": {
                    "name": {
                        "description": "The variable's name.",
                        "type": "string"
                    },
                    "type": {
                        "nullable": true,
                        "description": "The variable's type.",
                        "type": "string"
                    },
                    "value": {
                        "description": "The variable's value.",
                        "type": "object"
                    },
                    "valueInfo": {
                        "description": "TA JSON object containing additional, value-type-dependent properties.",
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "signal"
        },
        {
            "name": "user task"
        },
        {
            "name": "service task"
        }
    ]
}